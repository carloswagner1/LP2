<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCalcularH.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAQhSURBVHhe7ZxLqE5RGIaPS66hKBO3kVsxk0xk4hKZuF8T
        JZmJOVFKijkyIENGBogiE0W5DdyVmKDcRi7J5X1O56tlt/b6Nv85++yt9dRT+6xt7fWt95zfv/f/7726
        /oHRcpe8Kt/JH/JXQ6U2arwmqZna+5TV8o2MFdMGqZ059Am7ZfjXwvYreVPeaKjU9lIW62YuvcoyaYP8
        lOfkLNkWqJWaqd1CYk69whD5Qlo4++UA2Tao+YC0kJgTc+uYtdIOelm2MRyD2pkDc0Hm1jGnpP31LKSh
        5TAH+4WfpqFTbkkO9k2OoKHlDJfMhTkxt455JDnYh+6f/mSvPNtwqbEIc2FOzK1jHksO9r77pz8JX89N
        9Yoswskj+5hbx1QNiNd102xUQFPlhIZILY0LaCQNDYFackAJckAOOSCHHJBDDsghB+SQA3JoZEAX5PmG
        SC2NC6ip5oAc+zUgvkYZ13BjX/XUFlBbyQE55IAcckAOtQc0Ux6RxwOPytnSY7DcKY9J68s2bezzYAzG
        CsemFmoqo9aAxkv28W+KfpITZYrDMtYX2ZeCYzNGrC8fzFNbjFoDWinDwopulikeylg/9L512CRj/cxV
        MkatAa2TYVFFt8kUz2WsH7IvxVYZ62eulzFyQD3+FwE9k7F+2GlA1Baj1oDmS7tyjrlEprguY/2QfSkW
        y1g/pCZqi1FrQNwxcVIWQ+LnM3KQTDFPvpZhX6SNfSkGSsaIjU1NZXei1BqQMVZODuRCsSqc70yS1pft
        KudABmOFY1NLin4JqE3kgBxyQA45IId+CYh3lKGB3rtXEfoM65Htv4GxrC96Y9ceEHdxcXH4OfCjPCg9
        psvbkj5femT7jpwhPRiDsawvUss+WUatAc2RxfMQk/aykzXjooz1xUsyReoklXZqi1FrQN6lBpcDKVKX
        GuxL0YpLjXyxKjlYDqgEL6A1Miyq6BaZwo4f84lM0YqX2BTJu05YmPlVTpMpTshYX2RfCi+gskcNag0I
        Fkhu2uZdx+TpmiqPLnAnxiHJu5n1ZZs2746R1gTUX+SAHHJADjkghxyQQ2sCGiU559geyEnaGFmFuZI+
        O3pkmzaPVgTEQ3YPZFiY+VR6z6oTSPhUskkb+1K0IqDlMiyqaFmRxj0Z64f3ZQovoHyxKmP9zHyxKmP9
        zByQjPUzGxHQUhkWVbTsFhSDj1tj/ZCPXVN4t95QW4xaA+IDdnt0vOhd6T1KvkF+l8W+tG2UKTh22X/y
        1FT24X+vBpR6LNxgiYdFkr8Wk5sWqn47wTOmK6T1ZZu2KjAGY4VjU0tq2YlefSw8LyzgkJemcOBEzw7I
        sxl5cZMCeXmcCuQFliqwR4YXlWyz/FUbl+hiLn0CX/G0eZG3t7LPFnkzbJlAlt7jhCv87TRNaqPGf1wm
        sKvrN2fevMdCI++wAAAAAElFTkSuQmCC
</value>
  </data>
</root>